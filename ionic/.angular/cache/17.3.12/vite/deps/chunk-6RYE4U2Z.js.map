{
  "version": 3,
  "sources": ["../../../../../node_modules/web3-utils/node_modules/eventemitter3/index.js", "../../../../../node_modules/web3-utils/lib/esm/index.js", "../../../../../node_modules/web3-utils/lib/esm/uint8array.js", "../../../../../node_modules/web3-utils/lib/esm/converters.js", "../../../../../node_modules/web3-utils/node_modules/eventemitter3/index.mjs", "../../../../../node_modules/web3-utils/lib/esm/event_emitter.js", "../../../../../node_modules/web3-utils/lib/esm/validation.js", "../../../../../node_modules/web3-utils/lib/esm/objects.js", "../../../../../node_modules/web3-utils/lib/esm/string_manipulation.js", "../../../../../node_modules/web3-utils/lib/esm/formatter.js", "../../../../../node_modules/web3-utils/lib/esm/hash.js", "../../../../../node_modules/ethereum-cryptography/esm/random.js", "../../../../../node_modules/web3-utils/lib/esm/random.js", "../../../../../node_modules/web3-utils/lib/esm/promise_helpers.js", "../../../../../node_modules/web3-utils/lib/esm/json_rpc.js", "../../../../../node_modules/web3-utils/lib/esm/uuid.js", "../../../../../node_modules/web3-utils/lib/esm/web3_deferred_promise.js", "../../../../../node_modules/web3-utils/lib/esm/chunk_response_parser.js", "../../../../../node_modules/web3-utils/lib/esm/web3_eip1193_provider.js", "../../../../../node_modules/web3-utils/lib/esm/socket_provider.js"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport * from './converters.js';\nexport * from './event_emitter.js';\nexport * from './validation.js';\nexport * from './formatter.js';\nexport * from './hash.js';\nexport * from './random.js';\nexport * from './string_manipulation.js';\nexport * from './objects.js';\nexport * from './promise_helpers.js';\nexport * from './json_rpc.js';\nexport * as jsonRpc from './json_rpc.js';\nexport * from './web3_deferred_promise.js';\nexport * from './chunk_response_parser.js';\nexport * from './uuid.js';\nexport * from './web3_eip1193_provider.js';\nexport * from './socket_provider.js';\nexport * from './uint8array.js';\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport function isUint8Array(data) {\n    var _a, _b;\n    return (data instanceof Uint8Array ||\n        ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array' ||\n        ((_b = data === null || data === void 0 ? void 0 : data.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'Buffer');\n}\nexport function uint8ArrayConcat(...parts) {\n    const length = parts.reduce((prev, part) => {\n        const agg = prev + part.length;\n        return agg;\n    }, 0);\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const part of parts) {\n        result.set(part, offset);\n        offset += part.length;\n    }\n    return result;\n}\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nexport function uint8ArrayEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i += 1) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { bytesToUtf8, utf8ToBytes as ecUtf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { isAddress, isHex, isHexStrict, isInt, isUInt, isNullish, utils, utils as validatorUtils, validator, bigintPower, } from 'web3-validator';\nimport { HexProcessingError, InvalidAddressError, InvalidBooleanError, InvalidBytesError, InvalidNumberError, InvalidUnitError, InvalidIntegerError, } from 'web3-errors';\nimport { isUint8Array } from './uint8array.js';\n// Ref: https://ethdocs.org/en/latest/ether.html\n// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)\n/** @internal */\nexport const ethUnitMap = {\n    noether: BigInt(0),\n    wei: BigInt(1),\n    kwei: BigInt(1000),\n    Kwei: BigInt(1000),\n    babbage: BigInt(1000),\n    femtoether: BigInt(1000),\n    mwei: BigInt(1000000),\n    Mwei: BigInt(1000000),\n    lovelace: BigInt(1000000),\n    picoether: BigInt(1000000),\n    gwei: BigInt(1000000000),\n    Gwei: BigInt(1000000000),\n    shannon: BigInt(1000000000),\n    nanoether: BigInt(1000000000),\n    nano: BigInt(1000000000),\n    szabo: BigInt(1000000000000),\n    microether: BigInt(1000000000000),\n    micro: BigInt(1000000000000),\n    finney: BigInt(1000000000000000),\n    milliether: BigInt(1000000000000000),\n    milli: BigInt(1000000000000000),\n    ether: BigInt('1000000000000000000'),\n    kether: BigInt('1000000000000000000000'),\n    grand: BigInt('1000000000000000000000'),\n    mether: BigInt('1000000000000000000000000'),\n    gether: BigInt('1000000000000000000000000000'),\n    tether: BigInt('1000000000000000000000000000000'),\n};\nconst PrecisionLossWarning = 'Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods';\n/**\n * Convert a value from bytes to Uint8Array\n * @param data - Data to be converted\n * @returns - The Uint8Array representation of the input data\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToUint8Array(\"0xab\")));\n * > Uint8Array(1) [ 171 ]\n * ```\n */\nexport const bytesToUint8Array = (data) => {\n    validator.validate(['bytes'], [data]);\n    if (isUint8Array(data)) {\n        return data;\n    }\n    if (Array.isArray(data)) {\n        return new Uint8Array(data);\n    }\n    if (typeof data === 'string') {\n        return validatorUtils.hexToUint8Array(data);\n    }\n    throw new InvalidBytesError(data);\n};\n/**\n * @internal\n */\nconst { uint8ArrayToHexString } = validatorUtils;\n/**\n * Convert a byte array to a hex string\n * @param bytes - Byte array to be converted\n * @returns - The hex string representation of the input byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));\n * > \"0x480c\"\n *\n */\nexport const bytesToHex = (bytes) => uint8ArrayToHexString(bytesToUint8Array(bytes));\n/**\n * Convert a hex string to a byte array\n * @param hex - Hex string to be converted\n * @returns - The byte array representation of the input hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToBytes('0x74657374'));\n * > Uint8Array(4) [ 116, 101, 115, 116 ]\n * ```\n */\nexport const hexToBytes = (bytes) => {\n    if (typeof bytes === 'string' && bytes.slice(0, 2).toLowerCase() !== '0x') {\n        return bytesToUint8Array(`0x${bytes}`);\n    }\n    return bytesToUint8Array(bytes);\n};\n/**\n * Converts value to it's number representation\n * @param value - Hex string to be converted\n * @returns - The number representation of the input value\n *\n * @example\n * ```ts\n * conoslle.log(web3.utils.hexToNumber('0xa'));\n * > 10\n * ```\n */\nexport const hexToNumber = (value) => {\n    validator.validate(['hex'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `hexToNumber` implementation from `web3-validator`\n    return validatorUtils.hexToNumber(value);\n};\n/**\n * Converts value to it's number representation @alias `hexToNumber`\n */\nexport const toDecimal = hexToNumber;\n/**\n * Converts value to it's hex representation\n * @param value - Value to be converted\n * @param hexstrict - Add padding to converted value if odd, to make it hexstrict\n * @returns - The hex representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.numberToHex(10));\n * > \"0xa\"\n * ```\n */\nexport const numberToHex = (value, hexstrict) => {\n    if (typeof value !== 'bigint')\n        validator.validate(['int'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `numberToHex` implementation from `web3-validator`\n    let updatedValue = validatorUtils.numberToHex(value);\n    if (hexstrict) {\n        if (!updatedValue.startsWith('-') && updatedValue.length % 2 === 1) {\n            // To avoid duplicate a circular dependency we will not be using the padLeft method\n            updatedValue = '0x0'.concat(updatedValue.slice(2));\n        }\n        else if (updatedValue.length % 2 === 0 && updatedValue.startsWith('-'))\n            updatedValue = '-0x0'.concat(updatedValue.slice(3));\n    }\n    return updatedValue;\n};\n/**\n * Converts value to it's hex representation @alias `numberToHex`\n *\n */\nexport const fromDecimal = numberToHex;\n/**\n * Converts value to it's decimal representation in string\n * @param value - Hex string to be converted\n * @returns - The decimal representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToNumberString('0xa'));\n * > \"10\"\n * ```\n */\nexport const hexToNumberString = (data) => hexToNumber(data).toString();\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n * @param str - Utf8 string to be converted\n * @returns - The hex representation of the input string\n *\n * @example\n * ```ts\n * console.log(utf8ToHex('web3.js'));\n * > \"0x776562332e6a73\"\n * ```\n *\n */\nexport const utf8ToHex = (str) => {\n    validator.validate(['string'], [str]);\n    // To be compatible with 1.x trim null character\n    // eslint-disable-next-line no-control-regex\n    let strWithoutNullCharacter = str.replace(/^(?:\\u0000)/, '');\n    // eslint-disable-next-line no-control-regex\n    strWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\\u0000)$/, '');\n    return bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));\n};\n/**\n * @alias utf8ToHex\n */\nexport const fromUtf8 = utf8ToHex;\n/**\n * @alias utf8ToHex\n */\nexport const stringToHex = utf8ToHex;\n/**\n * Should be called to get utf8 from it's hex representation\n * @param str - Hex string to be converted\n * @returns - Utf8 string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nexport const hexToUtf8 = (str) => bytesToUtf8(hexToBytes(str));\n/**\n * @alias hexToUtf8\n */\nexport const toUtf8 = (input) => {\n    if (typeof input === 'string') {\n        return hexToUtf8(input);\n    }\n    validator.validate(['bytes'], [input]);\n    return bytesToUtf8(input);\n};\nexport const utf8ToBytes = ecUtf8ToBytes;\n/**\n * @alias hexToUtf8\n */\nexport const hexToString = hexToUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n * @param str - String to be converted to hex\n * @returns - Hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.asciiToHex('Hello World'));\n * > 0x48656c6c6f20576f726c64\n * ```\n */\nexport const asciiToHex = (str) => {\n    validator.validate(['string'], [str]);\n    let hexString = '';\n    for (let i = 0; i < str.length; i += 1) {\n        const hexCharCode = str.charCodeAt(i).toString(16);\n        // might need a leading 0\n        hexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;\n    }\n    return `0x${hexString}`;\n};\n/**\n * @alias asciiToHex\n */\nexport const fromAscii = asciiToHex;\n/**\n * Should be called to get ascii from it's hex representation\n * @param str - Hex string to be converted to ascii\n * @returns - Ascii string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nexport const hexToAscii = (str) => {\n    const decoder = new TextDecoder('ascii');\n    return decoder.decode(hexToBytes(str));\n};\n/**\n * @alias hexToAscii\n */\nexport const toAscii = hexToAscii;\n/**\n * Auto converts any given value into it's hex representation.\n * @param value - Value to be converted to hex\n * @param returnType - If true, it will return the type of the value\n *\n * @example\n * ```ts\n * console.log(web3.utils.toHex(10));\n * > 0xa\n *\n * console.log(web3.utils.toHex('0x123', true));\n * > bytes\n *```\n */\nexport const toHex = (value, returnType) => {\n    if (typeof value === 'string' && isAddress(value)) {\n        return returnType ? 'address' : `0x${value.toLowerCase().replace(/^0x/i, '')}`;\n    }\n    if (typeof value === 'boolean') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (typeof value === 'number') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n    }\n    if (typeof value === 'bigint') {\n        return returnType ? 'bigint' : numberToHex(value);\n    }\n    if (isUint8Array(value)) {\n        return returnType ? 'bytes' : bytesToHex(value);\n    }\n    if (typeof value === 'object' && !!value) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('-0x') || value.startsWith('-0X')) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        if (isHexStrict(value)) {\n            return returnType ? 'bytes' : value;\n        }\n        if (isHex(value) && !isInt(value) && !isUInt(value)) {\n            return returnType ? 'bytes' : `0x${value}`;\n        }\n        if (isHex(value) && !isInt(value) && isUInt(value)) {\n            // This condition seems problematic because meeting\n            // both conditions `!isInt(value) && isUInt(value)` should be impossible.\n            // But a value pass for those conditions: \"101611154195520776335741463917853444671577865378275924493376429267637792638729\"\n            // Note that according to the docs: it is supposed to be treated as a string (https://docs.web3js.org/guides/web3_upgrade_guide/x/web3_utils_migration_guide#conversion-to-hex)\n            // In short, the strange is that isInt(value) is false but isUInt(value) is true for the value above.\n            // TODO: isUInt(value) should be investigated.\n            // However, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729', true)` is called, it will return `true`.\n            // But, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729')` is called, it will throw inside `numberToHex`.\n            return returnType ? 'uint' : numberToHex(value);\n        }\n        if (!Number.isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    throw new HexProcessingError(value);\n};\n/**\n * Converts any given value into it's number representation, if possible, else into it's bigint representation.\n * @param value - The value to convert\n * @returns - Returns the value in number or bigint representation\n *\n * @example\n * ```ts\n * console.log(web3.utils.toNumber(1));\n * > 1\n * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));\n * > 9007199254740992n\n *\n * ```\n */\nexport const toNumber = (value) => {\n    if (typeof value === 'number') {\n        if (value > 1e20) {\n            console.warn(PrecisionLossWarning);\n            // JavaScript converts numbers >= 10^21 to scientific notation when coerced to strings,\n            // leading to potential parsing errors and incorrect representations.\n            // For instance, String(10000000000000000000000) yields '1e+22'.\n            // Using BigInt prevents this\n            return BigInt(value);\n        }\n        return value;\n    }\n    if (typeof value === 'bigint') {\n        return value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER\n            ? Number(value)\n            : value;\n    }\n    if (typeof value === 'string' && isHexStrict(value)) {\n        return hexToNumber(value);\n    }\n    try {\n        return toNumber(BigInt(value));\n    }\n    catch (_a) {\n        throw new InvalidNumberError(value);\n    }\n};\n/**\n * Auto converts any given value into it's bigint representation\n *\n * @param value - The value to convert\n * @returns - Returns the value in bigint representation\n\n * @example\n * ```ts\n * console.log(web3.utils.toBigInt(1));\n * > 1n\n * ```\n */\nexport const toBigInt = (value) => {\n    if (typeof value === 'number') {\n        return BigInt(value);\n    }\n    if (typeof value === 'bigint') {\n        return value;\n    }\n    // isHex passes for dec, too\n    if (typeof value === 'string' && isHex(value)) {\n        if (value.startsWith('-')) {\n            return -BigInt(value.substring(1));\n        }\n        return BigInt(value);\n    }\n    throw new InvalidNumberError(value);\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n * @param number - The value in wei\n * @param unit - The unit to convert to\n * @returns - Returns the converted value in the given unit\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromWei(\"1\", \"ether\"));\n * > 0.000000000000000001\n *\n * console.log(web3.utils.fromWei(\"1\", \"shannon\"));\n * > 0.000000001\n * ```\n */\nexport const fromWei = (number, unit) => {\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new InvalidIntegerError(unit);\n        }\n        denomination = bigintPower(BigInt(10), BigInt(unit));\n    }\n    // value in wei would always be integer\n    // 13456789, 1234\n    const value = String(toNumber(number));\n    // count number of zeros in denomination\n    // 1000000 -> 6\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    if (numberOfZerosInDenomination <= 0) {\n        return value.toString();\n    }\n    // pad the value with required zeros\n    // 13456789 -> 13456789, 1234 -> 001234\n    const zeroPaddedValue = value.padStart(numberOfZerosInDenomination, '0');\n    // get the integer part of value by counting number of zeros from start\n    // 13456789 -> '13'\n    // 001234 -> ''\n    const integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);\n    // get the fraction part of value by counting number of zeros backward\n    // 13456789 -> '456789'\n    // 001234 -> '001234'\n    const fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\\.?0+$/, '');\n    if (integer === '') {\n        return fraction ? `0.${fraction}` : '0';\n    }\n    if (fraction === '') {\n        return integer;\n    }\n    const updatedValue = `${integer}.${fraction}`;\n    return updatedValue.slice(0, integer.length + numberOfZerosInDenomination + 1);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * @param number - The number to convert.\n * @param unit - {@link EtherUnits} The unit of the number passed.\n * @returns The number converted to wei.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toWei(\"0.001\", \"ether\"));\n * > 1000000000000000 //(wei)\n * ```\n */\n// todo in 1.x unit defaults to 'ether'\nexport const toWei = (number, unit) => {\n    validator.validate(['number'], [number]);\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new InvalidIntegerError(unit);\n        }\n        denomination = bigintPower(BigInt(10), BigInt(unit));\n    }\n    let parsedNumber = number;\n    if (typeof parsedNumber === 'number') {\n        if (parsedNumber < 1e-15) {\n            console.warn(PrecisionLossWarning);\n        }\n        if (parsedNumber > 1e20) {\n            console.warn(PrecisionLossWarning);\n            parsedNumber = BigInt(parsedNumber);\n        }\n        else {\n            // in case there is a decimal point, we need to convert it to string\n            parsedNumber = parsedNumber.toLocaleString('fullwide', {\n                useGrouping: false,\n                maximumFractionDigits: 20,\n            });\n        }\n    }\n    // if value is decimal e.g. 24.56 extract `integer` and `fraction` part\n    // to avoid `fraction` to be null use `concat` with empty string\n    const [integer, fraction] = String(typeof parsedNumber === 'string' && !isHexStrict(parsedNumber)\n        ? parsedNumber\n        : toNumber(parsedNumber))\n        .split('.')\n        .concat('');\n    // join the value removing `.` from\n    // 24.56 -> 2456\n    const value = BigInt(`${integer}${fraction}`);\n    // multiply value with denomination\n    // 2456 * 1000000 -> 2456000000\n    const updatedValue = value * denomination;\n    // check if whole number was passed in\n    const decimals = fraction.length;\n    if (decimals === 0) {\n        return updatedValue.toString();\n    }\n    // trim the value to remove extra zeros\n    return updatedValue.toString().slice(0, -decimals);\n};\n/**\n * Will convert an upper or lowercase Ethereum address to a checksum address.\n * @param address - An address string\n * @returns\tThe checksum address\n * @example\n * ```ts\n * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');\n * > \"0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\"\n * ```\n */\nexport const toChecksumAddress = (address) => {\n    if (!isAddress(address, false)) {\n        throw new InvalidAddressError(address);\n    }\n    const lowerCaseAddress = address.toLowerCase().replace(/^0x/i, '');\n    // calling `Uint8Array.from` because `noble-hashes` checks with `instanceof Uint8Array` that fails in some edge cases:\n    // \thttps://github.com/paulmillr/noble-hashes/issues/25#issuecomment-1750106284\n    const hash = utils.uint8ArrayToHexString(keccak256(validatorUtils.ensureIfUint8Array(utf8ToBytes(lowerCaseAddress))));\n    if (isNullish(hash) ||\n        hash === '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470')\n        return ''; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    let checksumAddress = '0x';\n    const addressHash = hash.replace(/^0x/i, '');\n    for (let i = 0; i < lowerCaseAddress.length; i += 1) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += lowerCaseAddress[i].toUpperCase();\n        }\n        else {\n            checksumAddress += lowerCaseAddress[i];\n        }\n    }\n    return checksumAddress;\n};\nexport const toBool = (value) => {\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    if (typeof value === 'number' && (value === 0 || value === 1)) {\n        return Boolean(value);\n    }\n    if (typeof value === 'bigint' && (value === BigInt(0) || value === BigInt(1))) {\n        return Boolean(value);\n    }\n    if (typeof value === 'string' &&\n        !isHexStrict(value) &&\n        (value === '1' || value === '0' || value === 'false' || value === 'true')) {\n        if (value === 'true') {\n            return true;\n        }\n        if (value === 'false') {\n            return false;\n        }\n        return Boolean(Number(value));\n    }\n    if (typeof value === 'string' && isHexStrict(value) && (value === '0x1' || value === '0x0')) {\n        return Boolean(toNumber(value));\n    }\n    throw new InvalidBooleanError(value);\n};\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\nimport EventEmitter3 from 'eventemitter3';\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */\nexport class EventEmitter extends EventEmitter3 {\n    constructor() {\n        super(...arguments);\n        // must be defined for backwards compatibility\n        this.maxListeners = Number.MAX_SAFE_INTEGER;\n    }\n    setMaxListeners(maxListeners) {\n        this.maxListeners = maxListeners;\n        return this;\n    }\n    getMaxListeners() {\n        return this.maxListeners;\n    }\n}\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { InvalidBlockError } from 'web3-errors';\nimport { checkAddressCheckSum as checkAddressCheckSumValidator, isAddress as isAddressValidator, isBlockTag, isBloom as isBloomValidator, isContractAddressInBloom as isContractAddressInBloomValidator, isHex as isHexValidator, isHexStrict as isHexStrictValidator, isInBloom as isInBloomValidator, isNullish as isNullishValidator, isTopic as isTopicValidator, isTopicInBloom as isTopicInBloomValidator, isUserEthereumAddressInBloom as isUserEthereumAddressInBloomValidator, } from 'web3-validator';\nimport { BlockTags } from 'web3-types';\n/**\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isHexStrict = isHexStrictValidator;\n/**\n * returns true if input is a hexstring, number or bigint\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isHex = isHexValidator;\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const checkAddressCheckSum = checkAddressCheckSumValidator;\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isAddress = isAddressValidator;\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isBloom = isBloomValidator;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isInBloom = isInBloomValidator;\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isUserEthereumAddressInBloom = isUserEthereumAddressInBloomValidator;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isContractAddressInBloom = isContractAddressInBloomValidator;\n/**\n * Checks if its a valid topic\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isTopic = isTopicValidator;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nexport const isTopicInBloom = isTopicInBloomValidator;\n/**\n * Compares between block A and block B\n * @param blockA - Block number or string\n * @param blockB - Block number or string\n *\n * @returns - Returns -1 if a \\< b, returns 1 if a \\> b and returns 0 if a == b\n *\n * @example\n * ```ts\n * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));\n * > -1\n *\n * console.log(web3.utils.compareBlockNumbers(12, 11));\n * > 1\n * ```\n */\nexport const compareBlockNumbers = (blockA, blockB) => {\n    const isABlockTag = typeof blockA === 'string' && isBlockTag(blockA);\n    const isBBlockTag = typeof blockB === 'string' && isBlockTag(blockB);\n    if (blockA === blockB ||\n        ((blockA === 'earliest' || blockA === 0) && (blockB === 'earliest' || blockB === 0)) // only exception compare blocktag with number\n    ) {\n        return 0;\n    }\n    if (blockA === 'earliest') {\n        return -1;\n    }\n    if (blockB === 'earliest') {\n        return 1;\n    }\n    if (isABlockTag && isBBlockTag) {\n        // Increasing order:  earliest, finalized , safe, latest, pending\n        const tagsOrder = {\n            [BlockTags.EARLIEST]: 1,\n            [BlockTags.FINALIZED]: 2,\n            [BlockTags.SAFE]: 3,\n            [BlockTags.LATEST]: 4,\n            [BlockTags.PENDING]: 5,\n        };\n        if (tagsOrder[blockA] < tagsOrder[blockB]) {\n            return -1;\n        }\n        return 1;\n    }\n    if ((isABlockTag && !isBBlockTag) || (!isABlockTag && isBBlockTag)) {\n        throw new InvalidBlockError('Cannot compare blocktag with provided non-blocktag input.');\n    }\n    const bigIntA = BigInt(blockA);\n    const bigIntB = BigInt(blockB);\n    if (bigIntA < bigIntB) {\n        return -1;\n    }\n    if (bigIntA === bigIntB) {\n        return 0;\n    }\n    return 1;\n};\nexport const isContractInitOptions = (options) => typeof options === 'object' &&\n    !isNullishValidator(options) &&\n    Object.keys(options).length !== 0 &&\n    [\n        'input',\n        'data',\n        'from',\n        'gas',\n        'gasPrice',\n        'gasLimit',\n        'address',\n        'jsonInterface',\n        'syncWithContext',\n        'dataInputFill',\n    ].some(key => key in options);\nexport const isNullish = isNullishValidator;\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { TypedArray } from 'web3-types';\nimport { isNullish } from 'web3-validator';\nconst isIterable = (item) => typeof item === 'object' &&\n    !isNullish(item) &&\n    !Array.isArray(item) &&\n    !(item instanceof TypedArray);\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */\nexport const mergeDeep = (destination, ...sources) => {\n    if (!isIterable(destination)) {\n        return destination;\n    }\n    const result = Object.assign({}, destination); // clone deep here\n    for (const src of sources) {\n        // const src = { ..._src };\n        // eslint-disable-next-line no-restricted-syntax\n        for (const key in src) {\n            if (isIterable(src[key])) {\n                if (!result[key]) {\n                    result[key] = {};\n                }\n                result[key] = mergeDeep(result[key], src[key]);\n            }\n            else if (!isNullish(src[key]) && Object.hasOwnProperty.call(src, key)) {\n                if (Array.isArray(src[key]) || src[key] instanceof TypedArray) {\n                    result[key] = src[key].slice(0);\n                }\n                else {\n                    result[key] = src[key];\n                }\n            }\n        }\n    }\n    return result;\n};\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { NibbleWidthError } from 'web3-errors';\nimport { isHexStrict, validator, utils as validatorUtils, bigintPower } from 'web3-validator';\nimport { numberToHex, toHex, toNumber } from './converters.js';\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n *\n * console.log(web3.utils.padLeft('0x123', 10));\n * >0x0000000123\n * ```\n */\nexport const padLeft = (value, characterAmount, sign = '0') => {\n    // To avoid duplicate code and circular dependency we will\n    // use `padLeft` implementation from `web3-validator`\n    if (typeof value === 'string') {\n        if (!isHexStrict(value)) {\n            return value.padStart(characterAmount, sign);\n        }\n        return validatorUtils.padLeft(value, characterAmount, sign);\n    }\n    validator.validate(['int'], [value]);\n    return validatorUtils.padLeft(value, characterAmount, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n * console.log(web3.utils.padRight('0x123', 10));\n * > 0x1230000000\n *\n * console.log(web3.utils.padRight('0x123', 10, '1'));\n * > 0x1231111111\n * ```\n */\nexport const padRight = (value, characterAmount, sign = '0') => {\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        return value.padEnd(characterAmount, sign);\n    }\n    const hexString = typeof value === 'string' && isHexStrict(value) ? value : numberToHex(value);\n    const prefixLength = hexString.startsWith('-') ? 3 : 2;\n    validator.validate([hexString.startsWith('-') ? 'int' : 'uint'], [value]);\n    return hexString.padEnd(characterAmount + prefixLength, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`\n */\nexport const rightPad = padRight;\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`\n */\nexport const leftPad = padLeft;\n/**\n * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n *\n * @returns The hex string of the two’s complement.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toTwosComplement(13, 32));\n * > 0x0000000000000000000000000000000d\n *\n * console.log(web3.utils.toTwosComplement('-0x1', 32));\n * > 0xffffffffffffffffffffffffffffffff\n *\n * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));\n * > 0x00000000000000000020000000000000\n * ```\n */\nexport const toTwosComplement = (value, nibbleWidth = 64) => {\n    validator.validate(['int'], [value]);\n    const val = toNumber(value);\n    if (val >= 0)\n        return padLeft(toHex(val), nibbleWidth);\n    const largestBit = bigintPower(BigInt(2), BigInt(nibbleWidth * 4));\n    if (-val >= largestBit) {\n        throw new NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);\n    }\n    const updatedVal = BigInt(val);\n    const complement = updatedVal + largestBit;\n    return padLeft(numberToHex(complement), nibbleWidth);\n};\n/**\n * Converts the twos complement into a decimal number or big int.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n * @returns The decimal number or big int.\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromTwosComplement('0x0000000000000000000000000000000d', 32'));\n * > 13\n *\n * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));\n * > 9007199254740992n\n * ```\n */\nexport const fromTwosComplement = (value, nibbleWidth = 64) => {\n    validator.validate(['int'], [value]);\n    const val = toNumber(value);\n    if (val < 0)\n        return val;\n    const largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));\n    if (largestBit > nibbleWidth * 4)\n        throw new NibbleWidthError(`value: \"${value}\", nibbleWidth: \"${nibbleWidth}\"`);\n    // check the largest bit to see if negative\n    if (nibbleWidth * 4 !== largestBit)\n        return val;\n    const complement = bigintPower(BigInt(2), BigInt(nibbleWidth) * BigInt(4));\n    return toNumber(BigInt(val) - complement);\n};\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { FormatterError } from 'web3-errors';\nimport { FMT_BYTES, FMT_NUMBER, DEFAULT_RETURN_FORMAT, } from 'web3-types';\nimport { isNullish, isObject, utils } from 'web3-validator';\nimport { bytesToUint8Array, bytesToHex, numberToHex, toBigInt } from './converters.js';\nimport { mergeDeep } from './objects.js';\nimport { padLeft } from './string_manipulation.js';\nimport { isUint8Array, uint8ArrayConcat } from './uint8array.js';\nconst { parseBaseType } = utils;\nexport const isDataFormat = (dataFormat) => typeof dataFormat === 'object' &&\n    !isNullish(dataFormat) &&\n    'number' in dataFormat &&\n    'bytes' in dataFormat;\n/**\n * Finds the schema that corresponds to a specific data path within a larger JSON schema.\n * It works by iterating over the dataPath array and traversing the JSON schema one step at a time until it reaches the end of the path.\n *\n * @param schema - represents a JSON schema, which is an object that describes the structure of JSON data\n * @param dataPath - represents an array of strings that specifies the path to the data within the JSON schema\n * @param oneOfPath - represents an optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns the JSON schema that matches the data path\n *\n */\nconst findSchemaByDataPath = (schema, dataPath, oneOfPath = []) => {\n    let result = Object.assign({}, schema);\n    let previousDataPath;\n    for (const dataPart of dataPath) {\n        if (result.oneOf && previousDataPath) {\n            const currentDataPath = previousDataPath;\n            const path = oneOfPath.find(([key]) => key === currentDataPath);\n            if (path && path[0] === previousDataPath) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                result = result.oneOf[path[1]];\n            }\n        }\n        if (!result.properties && !result.items) {\n            return undefined;\n        }\n        if (result.properties) {\n            result = result.properties[dataPart];\n        }\n        else if (result.items && result.items.properties) {\n            const node = result.items.properties;\n            result = node[dataPart];\n        }\n        else if (result.items && isObject(result.items)) {\n            result = result.items;\n        }\n        else if (result.items && Array.isArray(result.items)) {\n            result = result.items[parseInt(dataPart, 10)];\n        }\n        if (result && dataPart)\n            previousDataPath = dataPart;\n    }\n    return result;\n};\n/**\n * Converts a value depending on the format\n * @param value - value to convert\n * @param ethType - The type of the value to be parsed\n * @param format - The format to be converted to\n * @returns - The value converted to the specified format\n */\nexport const convertScalarValue = (value, ethType, format) => {\n    try {\n        const { baseType, baseTypeSize } = parseBaseType(ethType);\n        if (baseType === 'int' || baseType === 'uint') {\n            switch (format.number) {\n                case FMT_NUMBER.NUMBER:\n                    return Number(toBigInt(value));\n                case FMT_NUMBER.HEX:\n                    return numberToHex(toBigInt(value));\n                case FMT_NUMBER.STR:\n                    return toBigInt(value).toString();\n                case FMT_NUMBER.BIGINT:\n                    return toBigInt(value);\n                default:\n                    throw new FormatterError(`Invalid format: ${String(format.number)}`);\n            }\n        }\n        if (baseType === 'bytes') {\n            let paddedValue;\n            if (baseTypeSize) {\n                if (typeof value === 'string')\n                    paddedValue = padLeft(value, baseTypeSize * 2);\n                else if (isUint8Array(value)) {\n                    paddedValue = uint8ArrayConcat(new Uint8Array(baseTypeSize - value.length), value);\n                }\n            }\n            else {\n                paddedValue = value;\n            }\n            switch (format.bytes) {\n                case FMT_BYTES.HEX:\n                    return bytesToHex(bytesToUint8Array(paddedValue));\n                case FMT_BYTES.UINT8ARRAY:\n                    return bytesToUint8Array(paddedValue);\n                default:\n                    throw new FormatterError(`Invalid format: ${String(format.bytes)}`);\n            }\n        }\n        if (baseType === 'string') {\n            return String(value);\n        }\n    }\n    catch (error) {\n        // If someone didn't use `eth` keyword we can return original value\n        // as the scope of this code is formatting not validation\n        return value;\n    }\n    return value;\n};\nconst convertArray = ({ value, schemaProp, schema, object, key, dataPath, format, oneOfPath = [], }) => {\n    var _a, _b;\n    // If value is an array\n    if (Array.isArray(value)) {\n        let _schemaProp = schemaProp;\n        // TODO This is a naive approach to solving the issue of\n        // a schema using oneOf. This chunk of code was intended to handle\n        // BlockSchema.transactions\n        // TODO BlockSchema.transactions are not being formatted\n        if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema\n            // matches the type of value[0], and if so we use the oneOfSchemaProp\n            // as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            schemaProp.oneOf.forEach((oneOfSchemaProp, index) => {\n                var _a, _b;\n                if (!Array.isArray(schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) &&\n                    ((typeof value[0] === 'object' &&\n                        ((_a = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') ||\n                        (typeof value[0] === 'string' &&\n                            ((_b = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _b === void 0 ? void 0 : _b.type) !== 'object'))) {\n                    _schemaProp = oneOfSchemaProp;\n                    oneOfPath.push([key, index]);\n                }\n            });\n        }\n        if (isNullish(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            // Can not find schema for array item, delete that item\n            // eslint-disable-next-line no-param-reassign\n            delete object[key];\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is a single type\n        if (isObject(_schemaProp.items) && !isNullish(_schemaProp.items.format)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], \n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                (_a = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _a === void 0 ? void 0 : _a.format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is an object\n        if (!Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) && ((_b = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _b === void 0 ? void 0 : _b.type) === 'object') {\n            for (const arrObject of value) {\n                // eslint-disable-next-line no-use-before-define\n                convert(arrObject, schema, dataPath, format, oneOfPath);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array is a tuple\n        if (Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], _schemaProp.items[i].format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Converts the data to the specified format\n * @param data - data to convert\n * @param schema - The JSON schema that describes the structure of the data\n * @param dataPath - A string array that specifies the path to the data within the JSON schema\n * @param format  - The format to be converted to\n * @param oneOfPath - An optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns - The data converted to the specified format\n */\nexport const convert = (data, schema, dataPath, format, oneOfPath = []) => {\n    var _a;\n    // If it's a scalar value\n    if (!isObject(data) && !Array.isArray(data)) {\n        return convertScalarValue(data, schema === null || schema === void 0 ? void 0 : schema.format, format);\n    }\n    const object = data;\n    // case when schema is array and `items` is object\n    if (Array.isArray(object) &&\n        (schema === null || schema === void 0 ? void 0 : schema.type) === 'array' &&\n        ((_a = schema === null || schema === void 0 ? void 0 : schema.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') {\n        convertArray({\n            value: object,\n            schemaProp: schema,\n            schema,\n            object,\n            key: '',\n            dataPath,\n            format,\n            oneOfPath,\n        });\n    }\n    else {\n        for (const [key, value] of Object.entries(object)) {\n            dataPath.push(key);\n            let schemaProp = findSchemaByDataPath(schema, dataPath, oneOfPath);\n            // If value is a scaler value\n            if (isNullish(schemaProp)) {\n                delete object[key];\n                dataPath.pop();\n                continue;\n            }\n            // If value is an object, recurse into it\n            if (isObject(value)) {\n                convert(value, schema, dataPath, format, oneOfPath);\n                dataPath.pop();\n                continue;\n            }\n            // If value is an array\n            if (convertArray({\n                value,\n                schemaProp,\n                schema,\n                object,\n                key,\n                dataPath,\n                format,\n                oneOfPath,\n            })) {\n                continue;\n            }\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema specifies format\n            // and if so we use the oneOfSchemaProp as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.format) === undefined && (schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n                for (const [_index, oneOfSchemaProp] of schemaProp.oneOf.entries()) {\n                    if ((oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.format) !== undefined) {\n                        schemaProp = oneOfSchemaProp;\n                        break;\n                    }\n                }\n            }\n            object[key] = convertScalarValue(value, schemaProp.format, format);\n            dataPath.pop();\n        }\n    }\n    return object;\n};\n/**\n * Given data that can be interpreted according to the provided schema, returns equivalent data that has been formatted\n * according to the provided return format.\n *\n * @param schema - how to interpret the data\n * @param data - data to be formatted\n * @param returnFormat - how to format the data\n * @returns - formatted data\n *\n * @example\n *\n * ```js\n * import { FMT_NUMBER, utils } from \"web3\";\n *\n * console.log(\n *   utils.format({ format: \"uint\" }, \"221\", { number: FMT_NUMBER.HEX }),\n * );\n * // 0xdd\n * ```\n *\n */\nexport const format = (schema, data, returnFormat = DEFAULT_RETURN_FORMAT) => {\n    let dataToParse;\n    if (isObject(data)) {\n        dataToParse = mergeDeep({}, data);\n    }\n    else if (Array.isArray(data)) {\n        dataToParse = [...data];\n    }\n    else {\n        dataToParse = data;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const jsonSchema = isObject(schema) ? schema : utils.ethAbiToJsonSchema(schema);\n    if (!jsonSchema.properties && !jsonSchema.items && !jsonSchema.format) {\n        throw new FormatterError('Invalid json schema for formatting');\n    }\n    return convert(dataToParse, jsonSchema, [], returnFormat);\n};\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * This package provides utility functions for Ethereum dapps and other web3.js packages.\n *\n * For using Utils functions, first install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Web3 Utils functions will be available as mentioned below.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3();\n *\n * const value = web3.utils.fromWei(\"1\", \"ether\")\n *\n * ```\n *\n * For using individual package install `web3-utils` package using `npm i web3-utils` or `yarn add web3-utils` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { fromWei, soliditySha3Raw } from 'web3-utils';\n *\n * console.log(fromWei(\"1\", \"ether\"));\n * console.log(soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n *\n * ```\n * @module Utils\n */\nimport { keccak256 } from 'ethereum-cryptography/keccak.js';\nimport { utf8ToBytes } from 'ethereum-cryptography/utils.js';\nimport { InvalidAddressError, InvalidBooleanError, InvalidBytesError, InvalidLargeValueError, InvalidSizeError, InvalidStringError, InvalidUnsignedIntegerError, } from 'web3-errors';\nimport { utils as validatorUtils, isAddress, isNullish, isHexStrict } from 'web3-validator';\nimport { bytesToUint8Array, bytesToHex, hexToBytes, toBigInt, toHex, toNumber, utf8ToHex, } from './converters.js';\nimport { leftPad, rightPad, toTwosComplement } from './string_manipulation.js';\nconst SHA3_EMPTY_BYTES = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.keccak256Wrapper('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.keccak256Wrapper(1));\n * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n *\n * console.log(web3.utils.keccak256Wrapper(0xaf12fd));\n * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c\n * ```\n */\nexport const keccak256Wrapper = (data) => {\n    let processedData;\n    if (typeof data === 'bigint' || typeof data === 'number') {\n        processedData = utf8ToBytes(data.toString());\n    }\n    else if (Array.isArray(data)) {\n        processedData = new Uint8Array(data);\n    }\n    else if (typeof data === 'string' && !isHexStrict(data)) {\n        processedData = utf8ToBytes(data);\n    }\n    else {\n        processedData = bytesToUint8Array(data);\n    }\n    return bytesToHex(keccak256(validatorUtils.ensureIfUint8Array(processedData)));\n};\nexport { keccak256Wrapper as keccak256 };\n/**\n * computes the Keccak-256 hash of the input and returns a hexstring\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.sha3('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3(''));\n * > undefined\n * ```\n */\nexport const sha3 = (data) => {\n    let updatedData;\n    if (typeof data === 'string') {\n        if (data.startsWith('0x') && isHexStrict(data)) {\n            updatedData = hexToBytes(data);\n        }\n        else {\n            updatedData = utf8ToBytes(data);\n        }\n    }\n    else {\n        updatedData = data;\n    }\n    const hash = keccak256Wrapper(updatedData);\n    // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    return hash === SHA3_EMPTY_BYTES ? undefined : hash;\n};\n/**\n * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * conosle.log(web3.utils.sha3Raw('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3Raw(''));\n * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n * ```\n */\nexport const sha3Raw = (data) => {\n    const hash = sha3(data);\n    if (isNullish(hash)) {\n        return SHA3_EMPTY_BYTES;\n    }\n    return hash;\n};\n/**\n * returns type and value\n * @param arg - the input to return the type and value\n * @returns - the type and value of the input\n */\nconst getType = (arg) => {\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    let type;\n    let value;\n    // if type is given\n    if (typeof arg === 'object' &&\n        ('t' in arg || 'type' in arg) &&\n        ('v' in arg || 'value' in arg)) {\n        type = 't' in arg ? arg.t : arg.type;\n        value = 'v' in arg ? arg.v : arg.value;\n        type = type.toLowerCase() === 'bigint' ? 'int' : type;\n    }\n    else if (typeof arg === 'bigint') {\n        return ['int', arg];\n    }\n    // otherwise try to guess the type\n    else {\n        type = toHex(arg, true);\n        value = toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) &&\n        typeof value === 'string' &&\n        !/^(-)?0x/i.test(value)) {\n        value = toBigInt(value);\n    }\n    return [type, value];\n};\n/**\n * returns the type with size if uint or int\n * @param name - the input to return the type with size\n * @returns - the type with size of the input\n */\nconst elementaryName = (name) => {\n    if (name.startsWith('int[')) {\n        return `int256${name.slice(3)}`;\n    }\n    if (name === 'int') {\n        return 'int256';\n    }\n    if (name.startsWith('uint[')) {\n        return `uint256'${name.slice(4)}`;\n    }\n    if (name === 'uint') {\n        return 'uint256';\n    }\n    return name;\n};\n/**\n * returns the size of the value of type 'byte'\n */\nconst parseTypeN = (value, typeLength) => {\n    const typesize = /^(\\d+).*$/.exec(value.slice(typeLength));\n    return typesize ? parseInt(typesize[1], 10) : 0;\n};\n/**\n * returns the bit length of the value\n * @param value - the input to return the bit length\n * @returns - the bit length of the input\n */\nconst bitLength = (value) => {\n    const updatedVal = value.toString(2);\n    return updatedVal.length;\n};\n/**\n * Pads the value based on size and type\n * returns a string of the padded value\n * @param type - the input to pad\n * @returns = the padded value\n */\nconst solidityPack = (type, val) => {\n    const value = val.toString();\n    if (type === 'string') {\n        if (typeof val === 'string')\n            return utf8ToHex(val);\n        throw new InvalidStringError(val);\n    }\n    if (type === 'bool' || type === 'boolean') {\n        if (typeof val === 'boolean')\n            return val ? '01' : '00';\n        throw new InvalidBooleanError(val);\n    }\n    if (type === 'address') {\n        if (!isAddress(value)) {\n            throw new InvalidAddressError(value);\n        }\n        return value;\n    }\n    const name = elementaryName(type);\n    if (type.startsWith('uint')) {\n        const size = parseTypeN(name, 'uint'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new InvalidSizeError(value);\n        }\n        const num = toNumber(value);\n        if (bitLength(num) > size) {\n            throw new InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            throw new InvalidUnsignedIntegerError(value);\n        }\n        return size ? leftPad(num.toString(16), (size / 8) * 2) : num.toString(16);\n    }\n    if (type.startsWith('int')) {\n        const size = parseTypeN(name, 'int'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new InvalidSizeError(type);\n        }\n        const num = toNumber(value);\n        if (bitLength(num) > size) {\n            throw new InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            return toTwosComplement(num.toString(), (size / 8) * 2);\n        }\n        return size ? leftPad(num.toString(16), size / 4) : num.toString(16);\n    }\n    if (name === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new InvalidBytesError(value);\n        }\n        return value;\n    }\n    if (type.startsWith('bytes')) {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new InvalidBytesError(value);\n        }\n        const size = parseTypeN(type, 'bytes'.length);\n        if (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new InvalidBytesError(value);\n        }\n        return rightPad(value, size * 2);\n    }\n    return '';\n};\n/**\n * returns a string of the tightly packed value given based on the type\n * @param arg - the input to return the tightly packed value\n * @returns - the tightly packed value\n */\nexport const processSolidityEncodePackedArgs = (arg) => {\n    const [type, val] = getType(arg);\n    // array case\n    if (Array.isArray(val)) {\n        // go through each element of the array and use map function to create new hexarg list\n        const hexArg = val.map((v) => solidityPack(type, v).replace('0x', ''));\n        return hexArg.join('');\n    }\n    const hexArg = solidityPack(type, val);\n    return hexArg.replace('0x', '');\n};\n/**\n * Encode packed arguments to a hexstring\n */\nexport const encodePacked = (...values) => {\n    const hexArgs = values.map(processSolidityEncodePackedArgs);\n    return `0x${hexArgs.join('').toLowerCase()}`;\n};\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, or null if input is empty\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3({ type: \"string\", value: \"31323334\" }));\n * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b\n * ```\n */\nexport const soliditySha3 = (...values) => sha3(encodePacked(...values));\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0\n * ```\n */\nexport const soliditySha3Raw = (...values) => sha3Raw(encodePacked(...values));\n/**\n * Get slot number for storage long string in contract. Basically for getStorage method\n * returns slotNumber where will data placed\n * @param mainSlotNumber - the slot number where will be stored hash of long string\n * @returns - the slot number where will be stored long string\n */\nexport const getStorageSlotNumForLongString = (mainSlotNumber) => sha3(`0x${(typeof mainSlotNumber === 'number'\n    ? mainSlotNumber.toString()\n    : mainSlotNumber).padStart(64, '0')}`);\n", "import { randomBytes } from \"@noble/hashes/utils\";\nexport function getRandomBytesSync(bytes) {\n    return randomBytes(bytes);\n}\nexport async function getRandomBytes(bytes) {\n    return randomBytes(bytes);\n}\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { getRandomBytesSync } from 'ethereum-cryptography/random.js';\nimport { bytesToHex } from './converters.js';\n/**\n * Returns a random byte array by the given bytes size\n * @param size - The size of the random byte array returned\n * @returns - random byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.randomBytes(32));\n * > Uint8Array(32) [\n *       93, 172, 226,  32,  33, 176, 156, 156,\n *       182,  30, 240,   2,  69,  96, 174, 197,\n *       33, 136, 194, 241, 197, 156, 110, 111,\n *       66,  87,  17,  88,  67,  48, 245, 183\n *    ]\n * ```\n */\nexport const randomBytes = (size) => getRandomBytesSync(size);\n/**\n * Returns a random hex string by the given bytes size\n * @param byteSize - The size of the random hex string returned\n * @returns - random hex string\n *\n * ```ts\n * console.log(web3.utils.randomHex(32));\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\n * ```\n */\nexport const randomHex = (byteSize) => bytesToHex(randomBytes(byteSize));\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isNullish } from 'web3-validator';\n/**\n * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.\n * @param object - to check if it is a `Promise`\n * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.\n */\nexport function isPromise(object) {\n    return ((typeof object === 'object' || typeof object === 'function') &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        typeof object.then === 'function');\n}\n/**\n * Wait for a promise but interrupt it if it did not resolve within a given timeout.\n * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.\n * @param awaitable - The promise or function to wait for.\n * @param timeout - The timeout in milliseconds.\n * @param error - (Optional) The error to throw if the timeout reached.\n */\nexport function waitWithTimeout(awaitable, timeout, error) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutId;\n        const result = yield Promise.race([\n            awaitable instanceof Promise ? awaitable : awaitable(),\n            new Promise((resolve, reject) => {\n                timeoutId = setTimeout(() => (error ? reject(error) : resolve(undefined)), timeout);\n            }),\n        ]);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    });\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached. It returns promise and intervalId.\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nexport function pollTillDefinedAndReturnIntervalId(func, interval) {\n    let intervalId;\n    const polledRes = new Promise((resolve, reject) => {\n        intervalId = setInterval((function intervalCallbackFunc() {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const res = yield waitWithTimeout(func, interval);\n                    if (!isNullish(res)) {\n                        clearInterval(intervalId);\n                        resolve(res);\n                    }\n                }\n                catch (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n            return intervalCallbackFunc;\n        })(), // this will immediate invoke first call\n        interval);\n    });\n    return [polledRes, intervalId];\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached.\n * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.\n * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nexport function pollTillDefined(func, interval) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return pollTillDefinedAndReturnIntervalId(func, interval)[0];\n    });\n}\n/**\n * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete\n * @param timeout - The timeout to enforced in milliseconds.\n * @param error - The error to throw if the timeout is reached.\n * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.\n *\n * @example\n * ```ts\n * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));\n * ```\n */\nexport function rejectIfTimeout(timeout, error) {\n    let timeoutId;\n    const rejectOnTimeout = new Promise((_, reject) => {\n        timeoutId = setTimeout(() => {\n            reject(error);\n        }, timeout);\n    });\n    return [timeoutId, rejectOnTimeout];\n}\n/**\n * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.\n * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.\n * @param cond - The function/condition to call.\n * @param interval - The interval in milliseconds.\n * @returns - an array with the interval ID and the Promise.\n */\nexport function rejectIfConditionAtInterval(cond, interval) {\n    let intervalId;\n    const rejectIfCondition = new Promise((_, reject) => {\n        intervalId = setInterval(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const error = yield cond();\n                if (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n        }, interval);\n    });\n    return [intervalId, rejectIfCondition];\n}\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { isNullish } from 'web3-validator';\nimport { rpcErrorsMap } from 'web3-errors';\nimport { uuidV4 } from './uuid.js';\n// check if code is a valid rpc server error code\nexport const isResponseRpcError = (rpcError) => {\n    const errorCode = rpcError.error.code;\n    return rpcErrorsMap.has(errorCode) || (errorCode >= -32099 && errorCode <= -32000);\n};\nexport const isResponseWithResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response &&\n    isNullish(response.error) &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`\nexport const isResponseWithError = (response) => !Array.isArray(response) &&\n    response.jsonrpc === '2.0' &&\n    !!response &&\n    isNullish(response.result) &&\n    // JSON RPC consider \"null\" as valid response\n    'error' in response &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\nexport const isResponseWithNotification = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    !isNullish(response.params) &&\n    !isNullish(response.method);\nexport const isSubscriptionResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    'id' in response &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response;\nexport const validateResponse = (response) => isResponseWithResult(response) || isResponseWithError(response);\nexport const isValidResponse = (response) => Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);\nexport const isBatchResponse = (response) => Array.isArray(response) && response.length > 0 && isValidResponse(response);\n// internal optional variable to increment and use for the jsonrpc `id`\nlet requestIdSeed;\n/**\n * Optionally use to make the jsonrpc `id` start from a specific number.\n * Without calling this function, the `id` will be filled with a Uuid.\n * But after this being called with a number, the `id` will be a number starting from the provided `start` variable.\n * However, if `undefined` was passed to this function, the `id` will be a Uuid again.\n * @param start - a number to start incrementing from.\n * \tOr `undefined` to use a new Uuid (this is the default behavior)\n */\nexport const setRequestIdStart = (start) => {\n    requestIdSeed = start;\n};\nexport const toPayload = (request) => {\n    var _a, _b, _c, _d;\n    if (typeof requestIdSeed !== 'undefined') {\n        requestIdSeed += 1;\n    }\n    return {\n        jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : '2.0',\n        id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : uuidV4(),\n        method: request.method,\n        params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined,\n    };\n};\nexport const toBatchPayload = (requests) => requests.map(request => toPayload(request));\nexport const isBatchRequest = (request) => Array.isArray(request) && request.length > 0;\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\nimport { bytesToHex } from './converters.js';\nimport { randomBytes } from './random.js';\n/**\n * Generate a version 4 (random) uuid\n * https://github.com/uuidjs/uuid/blob/main/src/v4.js#L5\n * @returns - A version 4 uuid of the form xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx\n * @example\n * ```ts\n * console.log(web3.utils.uuidV4());\n * > \"1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed\"\n * ```\n */\nexport const uuidV4 = () => {\n    const bytes = randomBytes(16);\n    // https://github.com/ethers-io/ethers.js/blob/ce8f1e4015c0f27bf178238770b1325136e3351a/packages/json-wallets/src.ts/utils.ts#L54\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    /* eslint-disable-next-line */\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    /* eslint-disable-next-line */\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const hexString = bytesToHex(bytes);\n    return [\n        hexString.substring(2, 10),\n        hexString.substring(10, 14),\n        hexString.substring(14, 18),\n        hexString.substring(18, 22),\n        hexString.substring(22, 34),\n    ].join('-');\n};\n", "/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport { OperationTimeoutError } from 'web3-errors';\n/**\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\n * which can be useful when dealing with asynchronous tasks.\n *\n */\nexport class Web3DeferredPromise {\n    /**\n     *\n     * @param timeout - (optional) The timeout in milliseconds.\n     * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\n     * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\n     */\n    constructor({ timeout, eagerStart, timeoutMessage, } = {\n        timeout: 0,\n        eagerStart: false,\n        timeoutMessage: 'DeferredPromise timed out',\n    }) {\n        // public tag to treat object as promise by different libs\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this[_a] = 'Promise';\n        this._state = 'pending';\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._timeoutMessage = timeoutMessage;\n        this._timeoutInterval = timeout;\n        if (eagerStart) {\n            this.startTimer();\n        }\n    }\n    /**\n     * Returns the current state of the promise.\n     * @returns 'pending' | 'fulfilled' | 'rejected'\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     *\n     * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\n     * @param onrejected  - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    then(onfulfilled, onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.then(onfulfilled, onrejected);\n        });\n    }\n    /**\n     *\n     * @param onrejected - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    catch(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.catch(onrejected);\n        });\n    }\n    /**\n     *\n     * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\n     * @returns\n     */\n    finally(onfinally) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.finally(onfinally);\n        });\n    }\n    /**\n     * Resolves the current promise.\n     * @param value - The value to resolve the promise with.\n     */\n    resolve(value) {\n        this._resolve(value);\n        this._state = 'fulfilled';\n        this._clearTimeout();\n    }\n    /**\n     * Rejects the current promise.\n     * @param reason - The reason to reject the promise with.\n     */\n    reject(reason) {\n        this._reject(reason);\n        this._state = 'rejected';\n        this._clearTimeout();\n    }\n    /**\n     * Starts the timeout timer for the promise.\n     */\n    startTimer() {\n        if (this._timeoutInterval && this._timeoutInterval > 0) {\n            this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\n        }\n    }\n    _checkTimeout() {\n        if (this._state === 'pending' && this._timeoutId) {\n            this.reject(new OperationTimeoutError(this._timeoutMessage));\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    }\n}\n_a = Symbol.toStringTag;\n", "import { InvalidResponseError } from 'web3-errors';\nexport class ChunkResponseParser {\n    constructor(eventEmitter, autoReconnect) {\n        this.eventEmitter = eventEmitter;\n        this.autoReconnect = autoReconnect;\n        this.chunkTimeout = 1000 * 15;\n    }\n    clearQueues() {\n        if (typeof this._clearQueues === 'function') {\n            this._clearQueues();\n        }\n    }\n    onError(clearQueues) {\n        this._clearQueues = clearQueues;\n    }\n    parseResponse(data) {\n        const returnValues = [];\n        // DE-CHUNKER\n        const dechunkedData = data\n            .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n            .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n            .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n            .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n            .split('|--|');\n        dechunkedData.forEach(_chunkData => {\n            // prepend the last chunk\n            let chunkData = _chunkData;\n            if (this.lastChunk) {\n                chunkData = this.lastChunk + chunkData;\n            }\n            let result;\n            try {\n                result = JSON.parse(chunkData);\n            }\n            catch (e) {\n                this.lastChunk = chunkData;\n                // start timeout to cancel all requests\n                if (this.lastChunkTimeout) {\n                    clearTimeout(this.lastChunkTimeout);\n                }\n                this.lastChunkTimeout = setTimeout(() => {\n                    if (this.autoReconnect)\n                        return;\n                    this.clearQueues();\n                    this.eventEmitter.emit('error', new InvalidResponseError({\n                        id: 1,\n                        jsonrpc: '2.0',\n                        error: { code: 2, message: 'Chunk timeout' },\n                    }));\n                }, this.chunkTimeout);\n                return;\n            }\n            // cancel timeout and set chunk to null\n            clearTimeout(this.lastChunkTimeout);\n            this.lastChunk = undefined;\n            if (result)\n                returnValues.push(result);\n        });\n        return returnValues;\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3BaseProvider, } from 'web3-types';\nimport { EventEmitter } from 'eventemitter3';\nimport { EIP1193ProviderRpcError } from 'web3-errors';\nimport { toPayload } from './json_rpc.js';\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nexport class Eip1193Provider extends Web3BaseProvider {\n    constructor() {\n        super(...arguments);\n        this._eventEmitter = new EventEmitter();\n        this._chainId = '';\n        this._accounts = [];\n    }\n    _getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request(toPayload({\n                method: 'eth_chainId',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : '';\n        });\n    }\n    _getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request(toPayload({\n                method: 'eth_accounts',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];\n        });\n    }\n    _onConnect() {\n        Promise.all([\n            this._getChainId()\n                .then(chainId => {\n                if (chainId !== this._chainId) {\n                    this._chainId = chainId;\n                    this._eventEmitter.emit('chainChanged', this._chainId);\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                console.error(err);\n            }),\n            this._getAccounts()\n                .then(accounts => {\n                if (!(this._accounts.length === accounts.length &&\n                    accounts.every(v => accounts.includes(v)))) {\n                    this._accounts = accounts;\n                    this._onAccountsChanged();\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                // eslint-disable-next-line no-console\n                console.error(err);\n            }),\n        ])\n            .then(() => this._eventEmitter.emit('connect', {\n            chainId: this._chainId,\n        }))\n            .catch(err => {\n            // todo: add error handler\n            // eslint-disable-next-line no-console\n            console.error(err);\n        });\n    }\n    // todo this must be ProvideRpcError with a message too\n    _onDisconnect(code, data) {\n        this._eventEmitter.emit('disconnect', new EIP1193ProviderRpcError(code, data));\n    }\n    _onAccountsChanged() {\n        // get chainId and safe to local\n        this._eventEmitter.emit('accountsChanged', this._accounts);\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ConnectionError, ConnectionNotOpenError, InvalidClientError, MaxAttemptsReachedOnReconnectingError, PendingRequestsOnReconnectingError, RequestAlreadySentError, Web3WSProviderError, } from 'web3-errors';\nimport { Eip1193Provider } from './web3_eip1193_provider.js';\nimport { ChunkResponseParser } from './chunk_response_parser.js';\nimport { isNullish } from './validation.js';\nimport { Web3DeferredPromise } from './web3_deferred_promise.js';\nimport * as jsonRpc from './json_rpc.js';\nconst DEFAULT_RECONNECTION_OPTIONS = {\n    autoReconnect: true,\n    delay: 5000,\n    maxAttempts: 5,\n};\nconst NORMAL_CLOSE_CODE = 1000; // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close\nexport class SocketProvider extends Eip1193Provider {\n    get SocketConnection() {\n        return this._socketConnection;\n    }\n    /**\n     * This is an abstract class for implementing a socket provider (e.g. WebSocket, IPC). It extends the EIP-1193 provider {@link EIP1193Provider}.\n     * @param socketPath - The path to the socket (e.g. /ipc/path or ws://localhost:8546)\n     * @param socketOptions - The options for the socket connection. Its type is supposed to be specified in the inherited classes.\n     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n     */\n    constructor(socketPath, socketOptions, reconnectOptions) {\n        super();\n        this._connectionStatus = 'connecting';\n        // Message handlers. Due to bounding of `this` and removing the listeners we have to keep it's reference.\n        this._onMessageHandler = this._onMessage.bind(this);\n        this._onOpenHandler = this._onConnect.bind(this);\n        this._onCloseHandler = this._onCloseEvent.bind(this);\n        this._onErrorHandler = this._onError.bind(this);\n        if (!this._validateProviderPath(socketPath))\n            throw new InvalidClientError(socketPath);\n        this._socketPath = socketPath;\n        this._socketOptions = socketOptions;\n        this._reconnectOptions = Object.assign(Object.assign({}, DEFAULT_RECONNECTION_OPTIONS), (reconnectOptions !== null && reconnectOptions !== void 0 ? reconnectOptions : {}));\n        this._pendingRequestsQueue = new Map();\n        this._sentRequestsQueue = new Map();\n        this._init();\n        this.connect();\n        this.chunkResponseParser = new ChunkResponseParser(this._eventEmitter, this._reconnectOptions.autoReconnect);\n        this.chunkResponseParser.onError(() => {\n            this._clearQueues();\n        });\n        this.isReconnecting = false;\n    }\n    _init() {\n        this._reconnectAttempts = 0;\n    }\n    /**\n     * Try to establish a connection to the socket\n     */\n    connect() {\n        try {\n            this._openSocketConnection();\n            this._connectionStatus = 'connecting';\n            this._addSocketListeners();\n        }\n        catch (e) {\n            if (!this.isReconnecting) {\n                this._connectionStatus = 'disconnected';\n                if (e && e.message) {\n                    throw new ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);\n                }\n                else {\n                    throw new InvalidClientError(this._socketPath);\n                }\n            }\n            else {\n                setImmediate(() => {\n                    this._reconnect();\n                });\n            }\n        }\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _validateProviderPath(path) {\n        return !!path;\n    }\n    /**\n     *\n     * @returns the pendingRequestQueue size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getPendingRequestQueueSize() {\n        return this._pendingRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns the sendPendingRequests size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getSentRequestsQueueSize() {\n        return this._sentRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns `true` if the socket supports subscriptions\n     */\n    // eslint-disable-next-line class-methods-use-this\n    supportsSubscriptions() {\n        return true;\n    }\n    on(type, listener) {\n        this._eventEmitter.on(type, listener);\n    }\n    once(type, listener) {\n        this._eventEmitter.once(type, listener);\n    }\n    removeListener(type, listener) {\n        this._eventEmitter.removeListener(type, listener);\n    }\n    _onDisconnect(code, data) {\n        this._connectionStatus = 'disconnected';\n        super._onDisconnect(code, data);\n    }\n    /**\n     * Disconnects the socket\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    disconnect(code, data) {\n        const disconnectCode = code !== null && code !== void 0 ? code : NORMAL_CLOSE_CODE;\n        this._removeSocketListeners();\n        if (this.getStatus() !== 'disconnected') {\n            this._closeSocketConnection(disconnectCode, data);\n        }\n        this._onDisconnect(disconnectCode, data);\n    }\n    /**\n     * Safely disconnects the socket, async and waits for request size to be 0 before disconnecting\n     * @param forceDisconnect - If true, will clear queue after 5 attempts of waiting for both pending and sent queue to be 0\n     * @param ms - Determines the ms of setInterval\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    safeDisconnect(code_1, data_1) {\n        return __awaiter(this, arguments, void 0, function* (code, data, forceDisconnect = false, ms = 1000) {\n            let retryAttempt = 0;\n            const checkQueue = () => __awaiter(this, void 0, void 0, function* () {\n                return new Promise(resolve => {\n                    const interval = setInterval(() => {\n                        if (forceDisconnect && retryAttempt >= 5) {\n                            this.clearQueues();\n                        }\n                        if (this.getPendingRequestQueueSize() === 0 &&\n                            this.getSentRequestsQueueSize() === 0) {\n                            clearInterval(interval);\n                            resolve(true);\n                        }\n                        retryAttempt += 1;\n                    }, ms);\n                });\n            });\n            yield checkQueue();\n            this.disconnect(code, data);\n        });\n    }\n    /**\n     * Removes all listeners for the specified event type.\n     * @param type - The event type to remove the listeners for\n     */\n    removeAllListeners(type) {\n        this._eventEmitter.removeAllListeners(type);\n    }\n    _onError(event) {\n        // do not emit error while trying to reconnect\n        if (this.isReconnecting) {\n            this._reconnect();\n        }\n        else {\n            this._eventEmitter.emit('error', event);\n        }\n    }\n    /**\n     * Resets the socket, removing all listeners and pending requests\n     */\n    reset() {\n        this._sentRequestsQueue.clear();\n        this._pendingRequestsQueue.clear();\n        this._init();\n        this._removeSocketListeners();\n        this._addSocketListeners();\n    }\n    _reconnect() {\n        if (this.isReconnecting) {\n            return;\n        }\n        this.isReconnecting = true;\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new PendingRequestsOnReconnectingError());\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        if (this._reconnectAttempts < this._reconnectOptions.maxAttempts) {\n            this._reconnectAttempts += 1;\n            setTimeout(() => {\n                this._removeSocketListeners();\n                this.connect(); // this can error out\n                this.isReconnecting = false;\n            }, this._reconnectOptions.delay);\n        }\n        else {\n            this.isReconnecting = false;\n            this._clearQueues();\n            this._removeSocketListeners();\n            this._eventEmitter.emit('error', new MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts));\n        }\n    }\n    /**\n     *  Creates a request object to be sent to the server\n     */\n    request(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isNullish(this._socketConnection)) {\n                throw new Error('Connection is undefined');\n            }\n            // if socket disconnected - open connection\n            if (this.getStatus() === 'disconnected') {\n                this.connect();\n            }\n            const requestId = jsonRpc.isBatchRequest(request)\n                ? request[0].id\n                : request.id;\n            if (!requestId) {\n                throw new Web3WSProviderError('Request Id not defined');\n            }\n            if (this._sentRequestsQueue.has(requestId)) {\n                throw new RequestAlreadySentError(requestId);\n            }\n            const deferredPromise = new Web3DeferredPromise();\n            deferredPromise.catch(error => {\n                this._eventEmitter.emit('error', error);\n            });\n            const reqItem = {\n                payload: request,\n                deferredPromise,\n            };\n            if (this.getStatus() === 'connecting') {\n                this._pendingRequestsQueue.set(requestId, reqItem);\n                return reqItem.deferredPromise;\n            }\n            this._sentRequestsQueue.set(requestId, reqItem);\n            try {\n                this._sendToSocket(reqItem.payload);\n            }\n            catch (error) {\n                this._sentRequestsQueue.delete(requestId);\n                this._eventEmitter.emit('error', error);\n            }\n            return deferredPromise;\n        });\n    }\n    _onConnect() {\n        this._connectionStatus = 'connected';\n        this._reconnectAttempts = 0;\n        super._onConnect();\n        this._sendPendingRequests();\n    }\n    _sendPendingRequests() {\n        for (const [id, value] of this._pendingRequestsQueue.entries()) {\n            try {\n                this._sendToSocket(value.payload);\n                this._pendingRequestsQueue.delete(id);\n                this._sentRequestsQueue.set(id, value);\n            }\n            catch (error) {\n                // catches if sendTosocket fails\n                this._pendingRequestsQueue.delete(id);\n                this._eventEmitter.emit('error', error);\n            }\n        }\n    }\n    _onMessage(event) {\n        const responses = this._parseResponses(event);\n        if (isNullish(responses) || responses.length === 0) {\n            return;\n        }\n        for (const response of responses) {\n            if (jsonRpc.isResponseWithNotification(response) &&\n                response.method.endsWith('_subscription')) {\n                this._eventEmitter.emit('message', response);\n                return;\n            }\n            const requestId = jsonRpc.isBatchResponse(response)\n                ? response[0].id\n                : response.id;\n            const requestItem = this._sentRequestsQueue.get(requestId);\n            if (!requestItem) {\n                return;\n            }\n            if (jsonRpc.isBatchResponse(response) ||\n                jsonRpc.isResponseWithResult(response) ||\n                jsonRpc.isResponseWithError(response)) {\n                this._eventEmitter.emit('message', response);\n                requestItem.deferredPromise.resolve(response);\n            }\n            this._sentRequestsQueue.delete(requestId);\n        }\n    }\n    clearQueues(event) {\n        this._clearQueues(event);\n    }\n    _clearQueues(event) {\n        if (this._pendingRequestsQueue.size > 0) {\n            this._pendingRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new ConnectionNotOpenError(event));\n                this._pendingRequestsQueue.delete(key);\n            });\n        }\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new ConnectionNotOpenError(event));\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        this._removeSocketListeners();\n    }\n}\n"],
  "mappings": "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",
  "names": ["EventEmitter", "EventEmitter", "checkAddressCheckSum", "isAddress", "isBloom", "isContractAddressInBloom", "isHex", "isHexStrict", "isInBloom", "isNullish", "isTopic", "isTopicInBloom", "isUserEthereumAddressInBloom", "randomBytes", "utf8ToBytes", "_a", "utf8ToBytes", "_a", "EventEmitter", "EventEmitter", "isHexStrict", "isHex", "checkAddressCheckSum", "isAddress", "isBloom", "isInBloom", "isUserEthereumAddressInBloom", "isContractAddressInBloom", "isTopic", "isTopicInBloom", "isNullish", "format", "_a", "_b", "hexArg", "randomBytes", "randomBytes", "_a", "__awaiter", "__awaiter", "EventEmitter", "_a", "__awaiter", "isNullish"]
}
